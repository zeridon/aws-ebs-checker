{"name":"Aws-ebs-checker","tagline":"A simple nagios check for ebs status and backup","body":"# AWS EBS Nagios checker\r\n\r\n## What is this\r\nThis is a nagios based check that can be used to check status of attached EBS volumes and their snapshots.\r\n\r\n## How to use\r\nConfigure it via NRPE and execute at will. For initial testing manual execution is advised. In order to use it you must enter your credentials in the global `$config` array or make sure the appropriate environment values are specified and available. More information can be found in [Providing Credentials to the SDK](http://docs.aws.amazon.com/aws-sdk-php/guide/latest/credentials.html) Amazon documentation.\r\n\r\nThere are 2 internal applications supported:\r\n\r\n * check-ebs - checks status for all attached EBS volumes.\r\n * check-snapshots - checks that the attached EBS volumes have at least a certain number of snapshots in the last 15 days (configurable via `--period|-p` option) and that those snapshots are healthy. Warning and critical levels are configurable via the `--warning|-w` and `--critical|-c` options respectively. Due to the usage of `symfony/console` the options are completely optional, but have fallback values of `14` and `7` respectively.\r\n * It is possible to ignore certain volumes by ID using the option `--ignore|-i`\r\n\r\nHelp is available via the --help option.\r\n\r\n## Hacking/Contributing\r\nPatches, improvements, suggestions, pull requests are welcome.\r\n\r\nThe code is relatively straight forward (albeit a bit duplicated) and shouldn't be hard on the eyes.\r\n\r\n## Example\r\nExample of a normal check\r\n\r\n```\r\nroot@i-11111111:~$ aws-ebs-check-status.php check-ebs\r\nOK: Volume vol-11111111 OK;\r\n```\r\n\r\nExample of critical alarm. Note that if an alarm is raised for more than one EBS volume, all will be reported.\r\n\r\n```\r\nroot@i-11111111:~$ aws-ebs-check-status.php check-snapshots\r\nCRITICAL: Volume vol-11111111 has less than 7 snapshots;\r\n```\r\n\r\nThis shows a machine with 4 EBS volumes attached having just 2 snapshots each.\r\n\r\n```\r\nroot@i-11111111:~$ aws-ebs-check-status.php check-snapshots -w 2 -c 1\r\nOK: snap-e4396c1e OK; snap-e3edb119 OK; snap-c6396c3c OK; snap-d1edb12b OK; snap-f9396c03 OK; snap-15ecb0ef OK; snap-a7396c5d OK; snap-a8edb152 OK;\r\n```\r\n\r\n## Dependencies\r\nThis check has been build with composer in mind to manage the dependencies.\r\n\r\nBeside that basic requirement the rest needed is:\r\n\r\n * PHP - preferable 5.3.3 and up\r\n * AWS SDK for PHP - it is managed via composer\r\n * symmfony/console - for easier options handling\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}